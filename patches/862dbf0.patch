commit 862dbf02d4e314d3e78d8ec2b52e5fed239a6d82
Author: Richard Imaoka <richard.e.imaoka@gmail.com>
Date:   Sun Jul 31 15:13:10 2022 +0900

    url

diff --git a/server/data/Query.json b/server/data/Query.json
index 414841d..265f1bb 100644
--- a/server/data/Query.json
+++ b/server/data/Query.json
@@ -1,3 +1,4 @@
 {
-  "hello": "Hello World"
+  "hello": "Hello World",
+  "url": "https://google.com"
 }
diff --git a/server/package-lock.json b/server/package-lock.json
index b771215..39b1aaa 100644
--- a/server/package-lock.json
+++ b/server/package-lock.json
@@ -10,7 +10,8 @@
       "license": "ISC",
       "dependencies": {
         "apollo-server": "^3.10.0",
-        "graphql": "^16.5.0"
+        "graphql": "^16.5.0",
+        "graphql-scalars": "^1.17.0"
       },
       "devDependencies": {
         "@graphql-codegen/cli": "^2.11.2",
@@ -3820,6 +3821,25 @@
         "url": "https://github.com/sponsors/jaydenseric"
       }
     },
+    "node_modules/graphql-scalars": {
+      "version": "1.17.0",
+      "resolved": "https://registry.npmjs.org/graphql-scalars/-/graphql-scalars-1.17.0.tgz",
+      "integrity": "sha512-y1WtSu6jiW5QdDjK3RWMRTdK+xAAtSIq3IxmtnhxzH7bCkHV/z8VZa8fsSG4BcWbjQQtCQYQvMnvbQ+TBCyJRQ==",
+      "dependencies": {
+        "tslib": "~2.3.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "graphql": "^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0"
+      }
+    },
+    "node_modules/graphql-scalars/node_modules/tslib": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.1.tgz",
+      "integrity": "sha512-77EbyPPpMz+FRFRuAFlWMtmgUWGe9UOG2Z25NqCwiIjRhOf5iKGuzSe5P2w1laq+FkRy4p+PCuVkJSGkzTEKVw=="
+    },
     "node_modules/graphql-tag": {
       "version": "2.12.6",
       "resolved": "https://registry.npmjs.org/graphql-tag/-/graphql-tag-2.12.6.tgz",
@@ -9360,6 +9380,21 @@
         }
       }
     },
+    "graphql-scalars": {
+      "version": "1.17.0",
+      "resolved": "https://registry.npmjs.org/graphql-scalars/-/graphql-scalars-1.17.0.tgz",
+      "integrity": "sha512-y1WtSu6jiW5QdDjK3RWMRTdK+xAAtSIq3IxmtnhxzH7bCkHV/z8VZa8fsSG4BcWbjQQtCQYQvMnvbQ+TBCyJRQ==",
+      "requires": {
+        "tslib": "~2.3.0"
+      },
+      "dependencies": {
+        "tslib": {
+          "version": "2.3.1",
+          "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.3.1.tgz",
+          "integrity": "sha512-77EbyPPpMz+FRFRuAFlWMtmgUWGe9UOG2Z25NqCwiIjRhOf5iKGuzSe5P2w1laq+FkRy4p+PCuVkJSGkzTEKVw=="
+        }
+      }
+    },
     "graphql-tag": {
       "version": "2.12.6",
       "resolved": "https://registry.npmjs.org/graphql-tag/-/graphql-tag-2.12.6.tgz",
diff --git a/server/package.json b/server/package.json
index 4d7dcbd..8e19155 100644
--- a/server/package.json
+++ b/server/package.json
@@ -20,6 +20,7 @@
   },
   "dependencies": {
     "apollo-server": "^3.10.0",
-    "graphql": "^16.5.0"
+    "graphql": "^16.5.0",
+    "graphql-scalars": "^1.17.0"
   }
 }
diff --git a/server/schema.gql b/server/schema.gql
index 6ae991f..f24de58 100644
--- a/server/schema.gql
+++ b/server/schema.gql
@@ -1,3 +1,6 @@
+scalar URL
+
 type Query {
   hello: String
+  url: URL
 }
diff --git a/server/src/generated/graphql.ts b/server/src/generated/graphql.ts
index 5918e05..8dcea8e 100644
--- a/server/src/generated/graphql.ts
+++ b/server/src/generated/graphql.ts
@@ -1,4 +1,8 @@
-import { GraphQLResolveInfo } from "graphql";
+import {
+  GraphQLResolveInfo,
+  GraphQLScalarType,
+  GraphQLScalarTypeConfig,
+} from "graphql";
 export type Maybe<T> = T | null;
 export type InputMaybe<T> = Maybe<T>;
 export type Exact<T extends { [key: string]: unknown }> = {
@@ -17,11 +21,13 @@ export type Scalars = {
   Boolean: boolean;
   Int: number;
   Float: number;
+  URL: any;
 };
 
 export type Query = {
   __typename?: "Query";
   hello: Maybe<Scalars["String"]>;
+  url: Maybe<Scalars["URL"]>;
 };
 
 export type ResolverTypeWrapper<T> = Promise<T> | T;
@@ -134,6 +140,7 @@ export type ResolversTypes = {
   Boolean: ResolverTypeWrapper<Scalars["Boolean"]>;
   Query: ResolverTypeWrapper<{}>;
   String: ResolverTypeWrapper<Scalars["String"]>;
+  URL: ResolverTypeWrapper<Scalars["URL"]>;
 };
 
 /** Mapping between all available schema types and the resolvers parents */
@@ -141,6 +148,7 @@ export type ResolversParentTypes = {
   Boolean: Scalars["Boolean"];
   Query: {};
   String: Scalars["String"];
+  URL: Scalars["URL"];
 };
 
 export type QueryResolvers<
@@ -148,8 +156,15 @@ export type QueryResolvers<
   ParentType extends ResolversParentTypes["Query"] = ResolversParentTypes["Query"]
 > = {
   hello: Resolver<Maybe<ResolversTypes["String"]>, ParentType, ContextType>;
+  url: Resolver<Maybe<ResolversTypes["URL"]>, ParentType, ContextType>;
 };
 
+export interface UrlScalarConfig
+  extends GraphQLScalarTypeConfig<ResolversTypes["URL"], any> {
+  name: "URL";
+}
+
 export type Resolvers<ContextType = any> = {
   Query: QueryResolvers<ContextType>;
+  URL: GraphQLScalarType;
 };
diff --git a/server/src/index.ts b/server/src/index.ts
index 114c77e..e66ee6c 100644
--- a/server/src/index.ts
+++ b/server/src/index.ts
@@ -1,5 +1,6 @@
 import { ApolloServer, gql } from "apollo-server";
 import * as fs from "fs";
+import { URLResolver } from "graphql-scalars";
 import { Query, Resolvers } from "./generated/graphql";
 
 const typeDefs = gql`
@@ -15,7 +16,11 @@ const resolvers: Resolvers<LoadingDataContext> = {
     hello: async (parent, args, context, info) => {
       return context.Query.hello;
     },
+    url: async (parent, args, context, info) => {
+      return context.Query.url;
+    },
   },
+  URL: URLResolver,
 };
 
 const readJsonFile = async (relativeFileName: string): Promise<any> => {
