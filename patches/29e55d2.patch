commit 29e55d23cc28c39294861547d919f3115c0348a6
Author: Richard Imaoka <richard.e.imaoka@gmail.com>
Date:   Sat Aug 6 11:20:12 2022 +0900

    udpate steps

diff --git a/scripts/aggregate.sh b/scripts/aggregate.sh
index 904ff19..9ea198a 100755
--- a/scripts/aggregate.sh
+++ b/scripts/aggregate.sh
@@ -3,7 +3,7 @@
 cd "$(dirname "$0")" || exit 
 cd ../ || exit # cd to the git repository root
 
-AGGREGATED=$(find steps/* -print0 | \
+AGGREGATED=$(find steps/2* -print0 | \
   xargs -0 cat | \
   grep -v '#!/bin/sh' | \
   grep -v '# REMOVE THIS' | \
diff --git a/steps/1-setup-apollo-server.sh b/steps/1-setup-apollo-server-and-codegen.sh
similarity index 82%
rename from steps/1-setup-apollo-server.sh
rename to steps/1-setup-apollo-server-and-codegen.sh
index e7f1e80..160c902 100755
--- a/steps/1-setup-apollo-server.sh
+++ b/steps/1-setup-apollo-server-and-codegen.sh
@@ -2,7 +2,7 @@
 
 # ## テンプレートのセットアップ
 
-# 下図のように 2 つのターミナルを使います。まずは 1 つ目ターミナルを立ち上げて、テンプレートのセットアップから GraphQL Codegen の実行までを行いましょう。
+# 下図のように 3 つのターミナルを使います。まずは 1 つ目ターミナルを立ち上げて、テンプレートのセットアップから GraphQL Codegen の実行までを行いましょう。
 
 #![アートボード 2.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/75738/7e11f3d9-5947-276f-2860-52e8a96f154e.png)
 
@@ -13,30 +13,30 @@ mkdir server
 # shellcheck disable=SC2164 # REMOVE THIS IN aggregate.sh
 cd server
 
-# node.js setup
+# # node.js setup
 npm init -y
 echo "node_modules" > .gitignore
 
-# install and initialize typescript
+# # install and initialize typescript
 npm install --save-dev typescript
 npx tsc --init
 
-# ts-node-dev: watch and restart a TypeScript server
+# # ts-node-dev: watch and restart a TypeScript server
 npm install --save-dev ts-node-dev
 npm set-script start "ts-node-dev --respawn src/index.ts"
 
-# apollo server
+# # apollo server
 npm install apollo-server graphql
 
-# install and setup graphql-codegen
+# # install and setup graphql-codegen
 npm install -D @graphql-codegen/cli # @2.10.0
-# ここで npx graphql-code-generator init を行ってもよいが、そうすると対話モードに入って手入力が増えるのと、
-# 結局は npx graphql-code-generator init で生成されたconfig.ymlを上書き更新することになるので、以下はnpm installのみ行って config.ymlは後ほど作成
+# # ここで npx graphql-code-generator init を行ってもよいが、そうすると対話モードに入って手入力が増えるのと、
+# # 結局は npx graphql-code-generator init で生成されたconfig.ymlを上書き更新することになるので、以下はnpm installのみ行って config.ymlは後ほど作成
 npm install --save-dev  @graphql-codegen/typescript @graphql-codegen/typescript-resolvers
 npm set-script generate "graphql-codegen --config codegen.yml --watch ./schema.gql" # update generate script
 
 
-# copy files
+# # copy files
 mkdir src
 mkdir data
 curl https://raw.githubusercontent.com/richardimaoka/tutorial-apollo-server-setup/main/server/codegen.yml > codegen.yml
diff --git a/steps/2-setup-codegen.sh b/steps/2-graphql-scalars.sh
similarity index 77%
rename from steps/2-setup-codegen.sh
rename to steps/2-graphql-scalars.sh
index 92731ec..730e924 100644
--- a/steps/2-setup-codegen.sh
+++ b/steps/2-graphql-scalars.sh
@@ -6,6 +6,8 @@ cd ../ || exit               # REMOVE THIS IN aggregate.sh - cd to the git repos
 # :large_orange_diamond: Action: 新しいターミナルを立ち上げてください。
 
 # ```:terminal
+# shellcheck disable=SC2164 # REMOVE THIS IN aggregate.sh
+cd server
 npm install graphql-scalars
 # ```
 
@@ -13,12 +15,12 @@ npm install graphql-scalars
 
 # ```graphql:server/schema.gql
 # scalar EmailAddress
-#
+
 # type Person {
 #   emailAddress: EmailAddress
 #   name: String
 # }
-#
+
 # type Query {
 #   me: Person
 # }
@@ -28,46 +30,41 @@ npm install graphql-scalars
 # ```ts:server/src/index.ts
 # import { ApolloServer, gql } from "apollo-server";
 # import * as fs from "fs";
-# import {
-#   EmailAddressResolver,
-#   TimestampResolver,
-#   URLResolver,
-# } from "graphql-scalars";
-# import { EmailAddress } from "graphql-scalars/mocks";
+# import { EmailAddressResolver } from "graphql-scalars";
 # import { Query, Resolvers } from "./generated/graphql";
-#
+
 # const typeDefs = gql`
 #   ${fs.readFileSync(__dirname.concat("/../schema.gql"), "utf8")}
 # `;
-#
+
 # interface LoadingDataContext {
 #   Query: Query;
 # }
-#
+
 # const resolvers: Resolvers<LoadingDataContext> = {
 #   Query: {
-#     me(parent, args, context, info) {
-#       return null;
+#     me(_parent, _args, context, _info) {
+#       return context.Query.me;
 #     },
 #   },
 #   Person: {
-#     name(parent, args, context, info) {
+#     name(parent, _args, _context, _info) {
 #       return parent.name;
 #     },
-#     emailAddress(parent, args, context, info) {
+#     emailAddress(parent, _args, _context, _info) {
 #       return parent.emailAddress;
 #     },
 #   },
 #   EmailAddress: EmailAddressResolver,
 # };
-#
+
 # const readJsonFile = async (relativeFileName: string): Promise<any> => {
 #   const jsonDataFile = __dirname.concat(relativeFileName);
 #   const fileContent = await fs.promises.readFile(jsonDataFile, "utf8");
 #   const jsonData = JSON.parse(fileContent);
 #   return jsonData;
 # };
-#
+
 # const server = new ApolloServer({
 #   typeDefs,
 #   resolvers,
@@ -84,15 +81,43 @@ npm install graphql-scalars
 #     }
 #   },
 # });
-#
+
 # // The  method launches a web server.
 # server.listen().then(({ url }) => {
 #   console.log();
 # });
-#```
+# ```
+
 
 # :large_orange_diamond: Action: 以下のとおり `server/data/Query.json` を更新してください。
 
+# ```json:server/data/Query.json
+# {
+#   "me": { 
+#     "emailAddress": "jason.summerwinnter@gmail.com",
+#     "name": "Jason Summerwinter"
+#   }
+# }
+# ```
+
+# :large_orange_diamond: Action: 以下のとおり `server/src/index.ts` を更新してください。
+#   override in index.ts, and return 10 -> error https://github.com/richardimaoka/tutorial-graphql-scalars/commit/5edea8ed55cf85d145edfc3c36746a74378aa148
+
+# :large_orange_diamond: Action: 以下のとおり `server/config.yml` を更新してください。
+#   config.yml to set string -> static type checking! https://github.com/richardimaoka/tutorial-graphql-scalars/commit/5edea8ed55cf85d145edfc3c36746a74378aa148
+# :white_check_mark: Result: Type Checkingが正しく効いてエラーが表示されます
+
+# :large_orange_diamond: Action: 以下のとおり `server/src/index.ts` を更新してください。
+#   however, returning a string with wrong-format passes static typing... https://github.com/richardimaoka/tutorial-graphql-scalars/commit/3396121dde6f3ced560498c3c07e84b7d1d0d03e
+# :white_check_mark: Result: stringであるというだけでType Checkingが成功してしまい、不正なメールアドレス形式を検知できません。
+
+
+# :large_orange_diamond: Action: Apollo Studio Explorer で以下のクエリを実行してください
+#   querying from apollo studio givens a runtime error
+# :white_check_mark: Result: 以下のようにエラーが表示されます。
+
+# これがgraphql-scalarsをそのまま使った際の限界です。
+
 # EmailAddress - schema.gql, data/Query.json, Apollo Studio
 #   override in index.ts, and return 10 -> error https://github.com/richardimaoka/tutorial-graphql-scalars/commit/5edea8ed55cf85d145edfc3c36746a74378aa148
 #   config.yml to set string -> static type checking! https://github.com/richardimaoka/tutorial-graphql-scalars/commit/5edea8ed55cf85d145edfc3c36746a74378aa148
@@ -146,9 +171,7 @@ npm install graphql-scalars
     #     }
     #   }
     # }
-# argument type
-#   Apollo Studio, send wrong type - error
-#   Apollo Studio, send wrong format - error
+
 
 run generate
 npm start
diff --git a/steps/3-argument-type.sh b/steps/3-argument-type.sh
new file mode 100755
index 0000000..c8d11d7
--- /dev/null
+++ b/steps/3-argument-type.sh
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+cd "$(dirname "$0")" || exit # REMOVE THIS IN aggregate.sh
+cd ../ || exit               # REMOVE THIS IN aggregate.sh - cd to the git repository root
+
+# argument type
+#   Apollo Studio, send wrong type - error
+#   Apollo Studio, send wrong format - error
\ No newline at end of file
diff --git a/steps/3-optional.sh b/steps/4-optional.sh
similarity index 100%
rename from steps/3-optional.sh
rename to steps/4-optional.sh
